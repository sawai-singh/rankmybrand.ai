version: '3.8'

services:
  # Prometheus - Metrics collection and storage
  prometheus:
    image: prom/prometheus:latest
    container_name: rankmybrand-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerts:/etc/prometheus/alerts:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Grafana - Metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: rankmybrand-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=rankmybrand123
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,redis-datasource
      - GF_SERVER_ROOT_URL=http://localhost:3006
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3006:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
    restart: unless-stopped

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: rankmybrand-node-exporter
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host:ro
    ports:
      - "9100:9100"
    networks:
      - monitoring
    restart: unless-stopped

  # PostgreSQL Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: rankmybrand-postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@host.docker.internal:5432/rankmybrand?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - monitoring
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Redis Exporter
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: rankmybrand-redis-exporter
    environment:
      REDIS_ADDR: "redis://host.docker.internal:6379"
    ports:
      - "9121:9121"
    networks:
      - monitoring
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Blackbox Exporter - Endpoint monitoring
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: rankmybrand-blackbox-exporter
    volumes:
      - ./blackbox.yaml:/config/blackbox.yml:ro
    command:
      - '--config.file=/config/blackbox.yml'
    ports:
      - "9115:9115"
    networks:
      - monitoring
    restart: unless-stopped

  # Alert Manager
  alertmanager:
    image: prom/alertmanager:latest
    container_name: rankmybrand-alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/config.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    networks:
      - monitoring
    restart: unless-stopped

  # Loki - Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: rankmybrand-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    restart: unless-stopped

  # Promtail - Log collector
  promtail:
    image: grafana/promtail:latest
    container_name: rankmybrand-promtail
    volumes:
      - /var/log:/var/log:ro
      - ../logs:/app/logs:ro
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  loki_data: