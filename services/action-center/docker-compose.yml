version: '3.8'

services:
  action-center:
    build: .
    container_name: action-center
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      # Database
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/rankmybrand}
      
      # Redis
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB:-0}
      
      # Streams
      INPUT_STREAM: ${INPUT_STREAM:-metrics.calculated}
      OUTPUT_STREAM: ${OUTPUT_STREAM:-recommendations.ready}
      CONSUMER_GROUP: ${CONSUMER_GROUP:-action-center-group}
      CONSUMER_NAME: ${CONSUMER_NAME:-action-worker-1}
      
      # API
      API_PORT: ${API_PORT:-8082}
      API_AUTH_ENABLED: ${API_AUTH_ENABLED:-false}
      JWT_SECRET: ${JWT_SECRET:-change-me-in-production}
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
      
      # OpenAI
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4-turbo-preview}
      
      # Anthropic
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      ANTHROPIC_MODEL: ${ANTHROPIC_MODEL:-claude-3-sonnet-20240229}
      
      # CMS Integrations
      WORDPRESS_URL: ${WORDPRESS_URL}
      WORDPRESS_USER: ${WORDPRESS_USER}
      WORDPRESS_APP_PASSWORD: ${WORDPRESS_APP_PASSWORD}
      
      WEBFLOW_API_KEY: ${WEBFLOW_API_KEY}
      WEBFLOW_SITE_ID: ${WEBFLOW_SITE_ID}
      
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      GITHUB_OWNER: ${GITHUB_OWNER}
      GITHUB_REPO: ${GITHUB_REPO}
      
      # Execution Settings
      AUTO_EXECUTION_ENABLED: ${AUTO_EXECUTION_ENABLED:-false}
      DRAFT_MODE_ONLY: ${DRAFT_MODE_ONLY:-true}
      MAX_CONCURRENT_RECOMMENDATIONS: ${MAX_CONCURRENT_RECOMMENDATIONS:-5}
      
      # Notifications
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM:-noreply@rankmybrand.ai}
      NOTIFICATION_EMAIL: ${NOTIFICATION_EMAIL}
      
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN}
      SLACK_CHANNEL: ${SLACK_CHANNEL:-#alerts}
      
      WEBHOOK_URL: ${WEBHOOK_URL}
      TEAMS_WEBHOOK_URL: ${TEAMS_WEBHOOK_URL}
      
      # Dashboard
      DASHBOARD_URL: ${DASHBOARD_URL:-http://localhost:3000}
      
      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-60000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      NODE_ENV: ${NODE_ENV:-production}
      
    depends_on:
      - postgres
      - redis
    networks:
      - rankmybrand-network
    volumes:
      - ./logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: action-center-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: rankmybrand
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rankmybrand-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: action-center-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - rankmybrand-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  rankmybrand-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: